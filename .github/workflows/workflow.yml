name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
 
jobs:
  build_backend:
    name: Build Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: zimskasola
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: postgres_pwd
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
          cache: maven
  
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        working-directory: Backend

      - name: Upload resulting Build package
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: Backend/target

  BE-static-code-analysis:
    name: BE SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [build_backend]
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
          cache: maven
  
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BE }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=anjalecnik_ZimskaSola
        working-directory: Backend/

  BE-docker-image-delivery:
    name: BE Docker Image Delivery
    runs-on: ubuntu-latest
    needs: build_backend
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: Package
          path: Backend/target/

      - name: Generate image tag
        id: date
        run: echo "::set-output name=date::$(date +%Y%m%d-%H%M%S)"

      - name: Docker build
        run: docker build -t ghcr.io/anjalecnik/zimskasola-qrks:$TAG_NAME -f Backend/src/main/docker/Dockerfile.jvm ./Backend
        env:
          TAG_NAME: CD-${{ steps.date.outputs.date }}

      - name: Retag to latest
        run: docker tag ghcr.io/anjalecnik/zimskasola-qrks:$TAG_NAME ghcr.io/anjalecnik/zimskasola-qrks:latest
        env:
          TAG_NAME: CD-${{ steps.date.outputs.date }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker push
        run: docker push ghcr.io/anjalecnik/zimskasola-qrks:$TAG_NAME && docker push ghcr.io/anjalecnik/zimskasola-qrks:latest
        env:
          TAG_NAME: CD-${{ steps.date.outputs.date }}


  FE-build:
    name: FE Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json
  
      - name: Install dependencies
        run: npm ci
        working-directory: Frontend

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: Frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('Frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        
      - name: Build frontend
        run: npm run build --no-progress 2>&1 >/dev/null || true # Mutes ESlint warnings
        working-directory: Frontend

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend-build
          path: Frontend/build/
          
  FE-static-code-analysis:
      name: FE SonarCloud Analysis
      runs-on: ubuntu-latest
      needs: [FE-build]
    
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
    
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 20
            cache: 'npm'
            cache-dependency-path: Frontend/package-lock.json
    
        - name: Install dependencies
          run: npm ci
          working-directory: Frontend
  
        - name: SonarCloud Scan Frontend
          uses: SonarSource/sonarcloud-github-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FE }}
          with:
            projectBaseDir: Frontend/
